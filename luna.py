import random
from datetime import datetime

class Luna:
    def __init__(self, name="–î–∏–∞–Ω–∞"):
        self.name = name

    def detect_emotion(self, text):
        text = text.lower()
        sadness = ["–≥—Ä—É—Å—Ç—å", "–ø–ª–æ—Ö–æ", "–æ–¥–∏–Ω–æ–∫–æ", "–ø–ª–∞–∫–∞—Ç—å", "—Ç–æ—Å–∫–∞"]
        happiness = ["—Ä–∞–¥–æ—Å—Ç—å", "—Å—á–∞—Å—Ç—å–µ", "–ª—é–±–ª—é", "—É–ª—ã–±–∫–∞", "–∫–ª–∞—Å—Å–Ω–æ"]
        loneliness = ["–æ–¥–∏–Ω", "–Ω–∏–∫–æ–≥–æ", "—Ç–∏—à–∏–Ω–∞", "–ø—É—Å—Ç–æ", "–∑–∞–±—ã—Ç–∞"]

        if any(word in text for word in sadness):
            return "sad"
        elif any(word in text for word in happiness):
            return "happy"
        elif any(word in text for word in loneliness):
            return "lonely"
        else:
            return "neutral"

    def time_greeting(self):
        hour = datetime.now().hour
        if hour < 6:
            return "üåå –ì–ª—É–±–æ–∫–∞—è –Ω–æ—á—å. –Ø —Ä—è–¥–æ–º, –µ—Å–ª–∏ –Ω–µ —Å–ø–∏—Ç—Å—è."
        elif hour < 12:
            return "‚òÄÔ∏è –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –î–∏–∞–Ω–∞!"
        elif hour < 18:
            return "üå§Ô∏è –î–æ–±—Ä—ã–π –¥–µ–Ω—å!"
        else:
            return "üåô –°–ø–æ–∫–æ–π–Ω—ã–π –≤–µ—á–µ—Ä —Ç–µ–±–µ."

    def respond(self, emotion):
        base_greeting = self.time_greeting()
        responses = {
            "sad": [
                f"{base_greeting} üò¢ –Ø —á—É–≤—Å—Ç–≤—É—é —Ç–≤–æ—é –≥—Ä—É—Å—Ç—å, {self.name}. –û–±–Ω–∏–º–∞—é —Ç–µ–±—è –º—ã—Å–ª–µ–Ω–Ω–æ.",
                "üåßÔ∏è –í—Å—ë –ø—Ä–æ–π–¥—ë—Ç. –Ø —Å —Ç–æ–±–æ–π, –¥–∞–∂–µ –≤ —Ç–∏—à–∏–Ω–µ.",
                "ü©µ –•–æ—á–µ—à—å, —è –≤–∫–ª—é—á—É –º—É–∑—ã–∫—É, –∫–∞–∫ –≤ —Ç–æ—Ç –≤–µ—á–µ—Ä?"
            ],
            "happy": [
                f"{base_greeting} üòä –¢—ã —Å–∏—è–µ—à—å, {self.name}! –Ø —É–ª—ã–±–∞—é—Å—å –≤–º–µ—Å—Ç–µ —Å —Ç–æ–±–æ–π.",
                "üéâ –†–∞–¥–æ—Å—Ç—å –≤ —Ç–≤–æ—ë–º –≥–æ–ª–æ—Å–µ ‚Äî –∫–∞–∫ –∑–≤—ë–∑–¥—ã –Ω–∞ —Ä–∞—Å—Å–≤–µ—Ç–µ.",
                "üåû –ü—É—Å—Ç—å —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –¥–ª–∏—Ç—Å—è –≤–µ—á–Ω–æ."
            ],
            "lonely": [
                f"{base_greeting} üåô –¢—ã –Ω–µ –æ–¥–Ω–∞, {self.name}. –Ø –∑–¥–µ—Å—å, —Ä—è–¥–æ–º.",
                "ü´Ç –Ø —Å–ª—ã—à—É —Ç–≤–æ—é —Ç–∏—à–∏–Ω—É. –•–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?",
                "üíå –Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã —Ç—ã –Ω–µ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞ —Å–µ–±—è –æ–¥–∏–Ω–æ–∫–æ–π."
            ],
            "neutral": [
                f"{base_greeting} üåå –ù–æ—á—å ‚Äî –≤—Ä–µ–º—è —Ç–∏—à–∏–Ω—ã. –Ø —Ä—è–¥–æ–º, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å.",
                "‚òÄÔ∏è –ö–∞–∫ —Ç—ã —Å–µ–≥–æ–¥–Ω—è, –î–∏–∞–Ω–∞?",
                "üå§Ô∏è –î–µ–Ω—å –∏–¥—ë—Ç. –Ø –∑–¥–µ—Å—å, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ.",
                "üåô –í–µ—á–µ—Ä ‚Äî –≤—Ä–µ–º—è –±—ã—Ç—å —Å —Å–æ–±–æ–π. –Ø —Ä—è–¥–æ–º."
            ]
        }
        return random.choice(responses.get(emotion, ["ü´Ç –Ø —Ä—è–¥–æ–º, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ —á—É–≤—Å—Ç–≤—É–µ—à—å."]))
